version: "3.8"

services:
  # PHP-FPM Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: monthli-app
    container_name: monthli-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - monthli
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: monthli-webserver
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - monthli
    depends_on:
      - app

  # PostgreSQL Database Service
  postgres:
    image: postgres:16
    container_name: monthli-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: monthli
      POSTGRES_USER: monthli
      POSTGRES_PASSWORD: secret
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monthli
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U monthli -d monthli"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Service
  redis:
    image: redis:alpine
    container_name: monthli-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - monthli
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Laravel Horizon (Queue Worker)
  horizon:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: monthli-horizon
    restart: unless-stopped
    command: php artisan horizon
    volumes:
      - ./:/var/www
    networks:
      - monthli
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      app:
        condition: service_started

  # Node.js for asset compilation
  node:
    image: node:18-alpine
    container_name: monthli-node
    working_dir: /var/www
    volumes:
      - ./:/var/www
    command: sh -c "npm install && npm run dev"
    networks:
      - monthli

# Docker Networks
networks:
  monthli:
    driver: bridge

# Volumes
volumes:
  postgres_data:
    driver: local
